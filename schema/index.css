/*

   Make input boxes a little larger

*/
input[type=text] {
    height: 2em;
}

/*

   Style buttons

*/
.item-btn {
    margin-left: 4px;
	margin-top: 2px;
    padding: 0.45em 0.5em 0.2em 0.5em;
}

body {
	padding:  10px
}

/*

   Hide descriptins, except in onlys (string of enum of only one value)

*/

.description {
	display: none;
}

.only .description {
	display: inline;
}

.only .title {
	display: inline;
}

/*

    Main flow

*/

/* Grey separator between entries */
#path > .nest  {
	padding-bottom: 5px;
	border-bottom: 1px #ccc solid;
}

/* Hanging indent */
#path > .nest > .nest, #path > .nest > select {
	margin-left: 30px;
	padding-bottom: 0px;
}

.dropdown-enum-nest > select {
	margin-left: 0px;
}

/*
.nest .nest .nest {
	border-bottom: none;
}

/* But not in nested items */
.items .item .nest {
	margin-left: 0px;
	border-bottom: 1px #ccc solid;
	padding-bottom: 3px;
}

.nest .nest .nest .nest {
	border: none;
	margin: 0;
	padding: 0;
}
*/

/* Don't show topmost title */
.nest .title {
	display: none;
}

.nest .nest .title {
    margin-top: 5px;
	display: block;
	font-size: 1.1em;
	font-weight: bold;
}

.nest .nest .nest .title {
    margin-top: 0px;
}

.nest .nest .string .title {
	display: inline;
	font-size: 1em;
	font-weight: normal;
}

/* titles */

.string .title:after {
	content: ": ";
}

.single-enum .title:after {
	content: ": ";
}

.multi-enum .title:after {
	content: ": ";
}

/*

   Don't display titles for union types

*/

.union-child > .title {
	display: none ! important;
}

/*

   Strings and booleans (the latter unused)

*/

.nest .string-title {
	display: inline;
}

.nest .nest .string {
	display: inline;
	vertical-align: top;
}

.bool {
	display: inline;
}

/*

   Border around array objects

*/

.array .object {
	border: 1px #ccc solid;
	padding: 6px;
}

/*

   Extra tags

*/

#path_extra_tags .item {
	border: 1px #ccc solid;
	display: inline-block;
	vertical-align: top;
	padding: 3px;
	margin: 3px;
}

#path_extra_tags .item .item{
	display: block;
	border: none;
	padding: 0;
	margin: 0;
}

/*

   Singles (buggy union types of only one element)

*/

.single .title {
	display: none;
}

.single .nest .title {
	display: block;
}

.single .nest .string-title {
	display: inline;
}

/*

   Word segmentation positional attributes

*/

#path_word_segmenter_1_attributes_item {
	display: inline;
}

#path_word_segmenter_1_attributes_item .inner {
	display: inline;
}

#path_word_segmenter_1_attributes_item .title {
	display: inline;
	font-weight: normal;
	font-size: 1em;
}

#path_word_segmenter_1_attributes_item .title:after {
	content: ": ";
}

#path_word_segmenter_1_attributes_item_key .title {
	display: none;
}

#path_word_segmenter_1_attributes_item_attribute .title {
	display: none;
}


/*

   Dropdowns (not used)

*/

.dropdown-enum .title {
	display: inline;
}

.dropdown-enum {
	display: inline;
}
