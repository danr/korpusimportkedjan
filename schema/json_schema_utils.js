// Generated by CoffeeScript 1.4.0

/*
Follows internal json schema references, i.e. objects of type
   { "$ref": "#/segmenters" },
which means replace this object with the attribute segmenters
from the top schema. Arrays and objects are traversed in the schema,
which gets mutated, and eventually returned. Cyclic references
voids termination.
*/


(function() {
  var follow_references, get_default;

  follow_references = function(schema) {
    var rec;
    rec = function(pos) {
      var addr, i, key, ref, relocate, _base, _i, _len, _ref, _ref1, _results;
      _results = [];
      for (key in pos) {
        ref = pos[key]["$ref"];
        if ((ref != null) && ref.slice(0, 2) === "#/") {
          relocate = schema;
          _ref = ref.slice(2).split('/');
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            addr = _ref[_i];
            relocate = relocate[addr];
          }
          delete pos[key]["$ref"];
          for (i in relocate) {
            if ((_ref1 = (_base = pos[key])[i]) == null) {
              _base[i] = relocate[i];
            }
          }
        }
        if ((_.isArray(pos[key])) || _.isObject(pos[key])) {
          _results.push(rec(pos[key]));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    rec(schema);
    return schema;
  };

  /*
  # Gets a value of the gives schema populated with the default values specified in it
  */


  get_default = function(schema) {
    if (schema.type === "object") {
      return _.object(_.map(schema.properties, function(subschema, key) {
        return [key, get_default(subschema)];
      }));
    } else {
      return schema["default"];
    }
  };

  /*
  # Export in the json_schema_utils namespace
  */


  window.json_schema_utils = {
    follow_references: follow_references,
    get_default: get_default
  };

}).call(this);
