// Generated by CoffeeScript 1.4.0
(function() {
  var generate, generate_item, schema, test, value;

  $(window.document).ready(function() {
    return $("#form").html(generate(schema, "value"));
  });

  generate = function(schema, path) {
    var dom, dom_key, key, new_button;
    console.log(schema, path);
    switch (schema.type) {
      case "string":
        return $("<span>" + schema.title + ": <input id=\"" + path + "\"></span>");
      case "bool":
        return $("<span><input id=\"" + path + "\" type=\"checkbox\"> " + schema.title + "</span>");
      case "object":
        dom = $("<div><strong>" + schema.title + "</strong></div>");
        for (key in schema.properties) {
          dom_key = generate(schema.properties[key], "" + path + "_" + key);
          dom.append($("<div>").append(dom_key));
        }
        return dom;
      case "array":
        dom = $("<div><strong>" + schema.title + "</strong></div>");
        new_button = $("<button>mk</button>").click(function() {
          dom.append(generate_item(schema.items, path));
          return false;
        });
        return dom.append(new_button);
    }
  };

  generate_item = function(schema, path) {
    var item_div, rm_button;
    item_div = $("<div>");
    rm_button = $("<button>rm</button>").click(function() {
      item_div.remove();
      return false;
    });
    return item_div.append(generate(schema, "" + path + "_element"), rm_button);
  };

  test = "array";

  if (test === "object") {
    schema = {
      title: "Two objects",
      type: "object",
      properties: {
        name: {
          title: "Name",
          type: "string"
        },
        happy: {
          title: "Happy",
          type: "bool"
        }
      }
    };
    value = {
      ref: {
        name: "Test name",
        happy: true
      }
    };
  }

  if (test === "array") {
    schema = {
      title: "An array of strings",
      type: "array",
      items: {
        title: "A string in the array",
        type: "string",
        "default": "default string value"
      }
    };
    value = {
      ref: ["first string", "second string"]
    };
  }

  if (test === "string") {
    schema = {
      title: "A string",
      type: "string"
    };
    value = {
      ref: "a string value"
    };
  }

  if (test === "bool") {
    schema = {
      title: "A checkbox",
      type: "bool"
    };
  }

}).call(this);
