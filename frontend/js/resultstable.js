// Generated by CoffeeScript 1.4.0
(function() {
  var append_array_to_table, id, lemgram_link, saldo_link, span, split_pipes, tabulate_sentence, to_array;

  to_array = function(x) {
    if (!(x != null)) {
      return [];
    } else if (!_.isArray(x)) {
      return [x];
    } else {
      return x;
    }
  };

  append_array_to_table = function(tbl, array) {
    var col, row, tr, _i, _j, _len, _len1, _results;
    _results = [];
    for (_i = 0, _len = array.length; _i < _len; _i++) {
      row = array[_i];
      tr = $("<tr/>");
      for (_j = 0, _len1 = row.length; _j < _len1; _j++) {
        col = row[_j];
        tr.append($("<td>").append(col));
      }
      _results.push(tbl.append(tr));
    }
    return _results;
  };

  split_pipes = function(f) {
    return function(s) {
      var a, sp;
      sp = (s === "|" ? "" : s.substring(1, s.length - 1));
      a = sp.split("|");
      if (a.join("")) {
        return a.map(f).join(", ");
      } else {
        return "&nbsp;";
      }
    };
  };

  saldo_link = function(s) {
    return "<a href=\"http://spraakbanken.gu.se/karp/#search=sense%7C" + s + "\">" + s + "</a>";
  };

  lemgram_link = function(s) {
    return "<a href=\"http://spraakbanken.gu.se/karp/#search=lemgram%7C" + s + "\">" + s + "</a>";
  };

  span = function(w) {
    return $("<span/>").html(w);
  };

  id = function(x) {
    return x;
  };

  tabulate_sentence = function(columns, sent, make_deptrees) {
    var col, deprel_div, header, table, words, _i, _len;
    table = $("<table class=\"table table-striped table-bordered table-condensed\"/>");
    header = $("<tr/>");
    for (_i = 0, _len = columns.length; _i < _len; _i++) {
      col = columns[_i];
      header.append($("<th>" + col.name + "</th>"));
    }
    table.append(header);
    words = to_array(sent.w);
    append_array_to_table(table, words.map(function(word) {
      return columns.map(function(col) {
        return span(col.correct(word[col.id] || "&nbsp;"));
      });
    }));
    if (make_deptrees) {
      deprel_div = $("<div/>").attr("id", sent.id);
      table.prepend($("<tr/>").append($("<td/>").attr("colspan", columns.length).css("background-color", "#FFFFFF").append(deprel_div)));
      deprel_div.show("slow", function() {
        return draw_brat_tree(words, sent.id);
      });
    }
    return table;
  };

  window.make_table = function(data, attributes) {
    var SLICE_SIZE, col, columns, correct, loading, make_deptrees, new_window, s, sentences, show_from, tables, xml_sentences;
    col = function(s) {
      return {
        name: s,
        id: s
      };
    };
    columns = (function() {
      var _i, _len, _ref, _results;
      _ref = ["pos", "msd", "lemma", "lex", "saldo", "prefix", "suffix", "ref", "dephead", "deprel"];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        _results.push(col(s));
      }
      return _results;
    })();
    correct = {
      msd: function(s) {
        return s.split(".").join(". ");
      },
      lemma: split_pipes(id),
      lex: split_pipes(lemgram_link),
      saldo: split_pipes(saldo_link),
      prefix: split_pipes(lemgram_link),
      suffix: split_pipes(lemgram_link)
    };
    columns.unshift({
      name: "ord",
      id: "text"
    });
    columns = $.grep(columns, function(col, _ix) {
      return $.inArray(col.id, attributes) !== -1 && !(col.id === "pos" && $.inArray("msd", attributes) !== -1);
    });
    $.each(columns, function(_ix, col) {
      return col.correct = correct[col.id] || id;
    });
    make_deptrees = true;
    $.each(["pos", "ref", "dephead", "deprel"], function(_ix, a) {
      return make_deptrees = make_deptrees && $.inArray(a, attributes) !== -1;
    });
    xml_sentences = data.getElementsByTagName("sentence");
    sentences = [];
    $.each(xml_sentences, function(_, s) {
      return sentences.push($.xml2json(s));
    });
    loading = $("<div class=\"loading\"><p>Laddar fler meningar&hellip;</p></div>");
    tables = $("<div/>");
    SLICE_SIZE = 8;
    show_from = function(ix) {
      var i, link, load_more, next, show_more, _i, _ref;
      next = ix + SLICE_SIZE;
      if (sentences.length > ix) {
        for (i = _i = ix, _ref = Math.min(next, sentences.length); ix <= _ref ? _i < _ref : _i > _ref; i = ix <= _ref ? ++_i : --_i) {
          tables.append(tabulate_sentence(columns, sentences[i], make_deptrees));
        }
      }
      if (sentences.length > next) {
        show_more = function() {
          load_more.detach();
          show_from(next);
          return false;
        };
        link = $("<a href=\"#\">Ladda fler meningar...</a>");
        load_more = $("<div/>").append(link);
        tables.append(load_more);
        link.click(show_more);
        return load_more.waypoint(show_more, {
          offset: "100%",
          triggerOnce: true,
          onlyOnScroll: true
        });
      }
    };
    show_from(0);
    new_window = function(mime, content) {
      var w;
      w = window.open(",");
      w.document.open(mime, "replace");
      w.document.write(content);
      return w.document.close();
    };
    $("#extra_buttons").empty().append($("<button class=\"btn\">Visa XML</button>").click(function() {
      new_window("application/xml", (new XMLSerializer()).serializeToString(data));
      return false;
    }));
    $("#result").empty().append(tables);
  };

}).call(this);
