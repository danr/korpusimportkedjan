// Generated by CoffeeScript 1.4.0
(function() {
  var fallback_key, language_key;

  language_key = 'se';

  fallback_key = 'en';

  /*
  # Localize element
  */


  $.fn.localize_element = function(entries) {
    var key;
    for (key in entries) {
      if (entries[key] != null) {
        $(this).attr("data-loc-" + key, entries[key]);
      }
    }
    $(this).localize();
    return $(this);
  };

  jQuery.fn.localize = function() {
    var data_loc, data_loc_fallback, localize_element;
    data_loc = "data-loc-" + language_key;
    data_loc_fallback = "data-loc-" + fallback_key;
    localize_element = function(el) {
      el = $(el);
      if (el.attr(data_loc)) {
        return el.text(el.attr(data_loc));
      } else if (el.attr(data_loc_fallback)) {
        return el.text(el.attr(data_loc_fallback));
      }
    };
    $(this).find("[" + data_loc + "]").each(function(_key, el) {
      return localize_element(el);
    });
    localize_element($(this));
    return $(this);
  };

  jQuery.fn.set_language = function(new_language_key, new_fallback_key) {
    language_key = new_language_key;
    if (fallback_key == null) {
      fallback_key = new_fallback_key;
    }
    return $("body").localize();
  };

  window.localization_info = (function() {
    var lookup;
    lookup = {
      pos: pos_localization,
      msd: msd_localization,
      deprel: deprel_localization
    };
    return function(attr, value) {
      var lang, loc, translations, _ref;
      loc = {};
      _ref = lookup[attr] || {};
      for (lang in _ref) {
        translations = _ref[lang];
        loc[lang] = "" + value + ": " + translations[value];
      }
      return loc;
    };
  })();

}).call(this);
